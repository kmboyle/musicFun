{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/music/file-mgmt.component.css","webpack:///./src/app/music/file-mgmt.component.html","webpack:///./src/app/music/file-mgmt.component.ts","webpack:///./src/app/music/music-performance.component.ts","webpack:///./src/app/music/music.component.css","webpack:///./src/app/music/music.component.html","webpack:///./src/app/music/music.component.ts","webpack:///./src/app/music/music.service.ts","webpack:///./src/app/services/file-mgmt.service.ts","webpack:///./src/app/shared/init-caps.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, ViewChild } from '@angular/core';\r\nimport { MusicService } from './music/music.service';\r\nimport { MusicComponent } from './music/music.component';\r\nimport {IPerformance} from './models/music-interface';\r\nimport { MatFormFieldControl  } from '@angular/material/form-field';\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\n\r\n\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [MusicService]\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  showDate: any;\r\n  songs: any;\r\n  public musicComponent: MusicComponent;\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { InitCapsPipe } from './shared/init-caps.pipe';\r\n\r\nimport { RouterModule } from '@angular/router';\r\nimport { MusicComponent } from './music/music.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { MusicService } from './music/music.service';\r\nimport {HttpModule} from '@angular/http';\r\nimport { MusicPerformanceComponent } from './music/music-performance.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\r\nimport * as firebase from 'firebase/app';\r\n\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: 'AIzaSyB6p3dOXyEWZDIwMSUOTEej-6cSaPlE8LI',\r\n  authDomain: 'awesomeness-a47d9.firebaseapp.com',\r\n  databaseURL: 'https://awesomeness-a47d9.firebaseio.com',\r\n  projectId: 'awesomeness-a47d9',\r\n  storageBucket: 'awesomeness-a47d9.appspot.com',\r\n  messagingSenderId: '154832084236'\r\n};\r\nimport { FileMgmtComponent } from './music/file-mgmt.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    [Ng4LoadingSpinnerModule.forRoot()],\r\n    AngularFireModule.initializeApp(firebaseConfig),\r\n    AngularFireDatabaseModule,\r\n    AngularFireAuthModule,\r\n    RouterModule.forRoot([ {path: 'home', component: MusicComponent},\r\n    {path: 'music/:id', component: MusicPerformanceComponent},\r\n    {path: 'newSong', component: FileMgmtComponent},\r\n    {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n    {path: '**', redirectTo: 'home', pathMatch: 'full'} ]),\r\n    NgbModule.forRoot(),\r\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    InitCapsPipe,\r\n    MusicComponent,\r\n    MusicPerformanceComponent,\r\n    FileMgmtComponent\r\n  ],\r\n  exports: [MaterialModule],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatInputModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","module.exports = \".bandImg{\\r\\n    padding-bottom: 2rem;\\r\\n    padding-top: 2rem;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <form [formGroup]='songForm'>\\r\\n    <div class='uploadElement'>\\r\\n      <img class= 'bandImg' src='../../assets/band.jpeg'/>\\r\\n      <!-- \\r\\n      <label>Source</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"src\\\"/>\\r\\n      <label>Date</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"date\\\"/> -->\\r\\n      <div class=\\\"form-group col-md-6\\\">\\r\\n          <label>Song Title</label>\\r\\n          <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': errorMessage}\\\" class=\\\"form-control mb-3\\\" formControlName=\\\"title\\\"/>\\r\\n          <label for=\\\"file\\\">Choose Song</label>\\r\\n          <input [ngClass]=\\\"{'is-invalid': errorMessage}\\\" type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\"/>\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"back()\\\">Back</button>\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"uploadFileToActivity()\\\">Upload</button>\\r\\n          <div *ngIf ='errorMessage' class='invalid-feedback help-block'>{{ errorMessage }}</div>\\r\\n          <div *ngIf ='success' class='text-success'>{{ success }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport {IPerformance} from '../models/music-interface';\r\nimport {Song} from '../models/data-model';\r\nimport { MusicService } from './music.service';\r\nimport { FileService } from '../services/file-mgmt.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n    templateUrl: './file-mgmt.component.html',\r\n    styleUrls: ['./file-mgmt.component.css'],\r\n    providers: [FileService]\r\n})\r\nexport class FileMgmtComponent implements OnInit {\r\n    songForm: FormGroup;\r\n    errorMessage = '';\r\n    success = '';\r\n    fileToUpload: File = null;\r\n    constructor(private fileUploadService: FileService, private _router: Router, private fb: FormBuilder, private http: HttpClient) {\r\n        this.createForm();\r\n    }\r\n    createForm() {\r\n        this.songForm = this.fb.group({\r\n            title: ['', Validators.required]\r\n        });\r\n    }\r\n    ngOnInit(): void {\r\n    }\r\n    handleFileInput(files: FileList) {\r\n        this.fileToUpload = files.item(0);\r\n    }\r\n    addSong(): boolean {\r\n        console.log(this.songForm.controls);\r\n        return false;\r\n    }\r\n\r\n    uploadFileToActivity() {\r\n        if (this.songForm.invalid || !this.fileToUpload) {\r\n            return this.errorMessage = 'Please include a song name and a song file.';\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('song', this.fileToUpload);\r\n        formData.append('name', this.songForm.controls['title'].value);\r\n        console.log(formData);\r\n        this.http.post('/api/songs', formData).subscribe(data => {\r\n            console.log(data);\r\n        });\r\n        // this.fileUploadService.postFile(, this.fileToUpload).subscribe(data => {\r\n        //   // do something, if upload success\r\n        //   // this.success = 'Upload Success!';\r\n        //   if (data.Error) {\r\n        //       this.errorMessage = 'Sorry, Upload Failed.';\r\n        //   } else {\r\n        //     this.success = 'Upload Success!';\r\n        //   }\r\n        //   console.log(data);\r\n        //   }, error => {\r\n        //     console.log(error);\r\n        //   });\r\n      }\r\n      back() {\r\n        this._router.navigate(['/home']);\r\n      }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {IPerformance} from '../models/music-interface';\r\nimport { MusicService } from './music.service';\r\nimport { FileService } from '../services/file-mgmt.service';\r\n\r\n\r\n@Component({\r\n\r\n  template: `<h1>{{ this.pageTitle }}</h1>\r\n  <table>\r\n  <tr *ngFor='let set of performance'>\r\n\r\n            <td>{{ set.title }}</td>\r\n            <td><audio controls>\r\n                            <source [src]='set.src' type='audio/mp3'>\r\n                            </audio>\r\n            </td>\r\n            <button (click)='getDownload(set)'>Download</button>\r\n        </tr>\r\n  </table>\r\n\r\n  <img *ngIf=\"linkSrc\" src=\"{{linkSrc}}\" id=\"myimg\">\r\n  <button (click)='onBack()'>Take me home</button>`,\r\n  styleUrls: [],\r\n  providers: [FileService]\r\n})\r\nexport class MusicPerformanceComponent implements OnInit {\r\n  linkSrc: string;\r\n  pageTitle = '';\r\n  performance: IPerformance[];\r\n  errorMessage: string;\r\n  setDate: string;\r\n  performanceSongs: string;\r\n  id: number;\r\n  songURL: string;\r\n\r\n  constructor(private _route: ActivatedRoute,\r\n              private _router: Router,\r\n              private _musicService: MusicService,\r\n              private fileService: FileService) {\r\n\r\n}\r\n\r\n  ngOnInit() {\r\n    // because the param is a string, add a + to convert the param string to a numeric id\r\n    this.id = +this._route.snapshot.paramMap.get('id');\r\n    this._musicService.getPerformances()\r\n      .subscribe(performance => {\r\n        this.performance = performance.filter(pfm => pfm.id === this.id);\r\n        console.log(this.performance);\r\n        this.pageTitle = `${this.performance[0].title} ${this.performance[0].date}`;\r\n      }, error => this.errorMessage = <any>error);\r\n    }\r\n  getDownload(song: any) {\r\n    console.log(song.src.split('/')[song.src.split('/').length - 1]);\r\n    const songFileName = song.src.split('/')[song.src.split('/').length - 1];\r\n    this.fileService.downloadFile(songFileName).subscribe(url => {\r\n\r\n      this.linkSrc = url;\r\n    });\r\n  }\r\n\r\n// to route with code, import the router and use it's navigate method\r\n  onBack(): void {\r\n    this._router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","module.exports = \".songName {\\r\\n    font-weight: bold;\\r\\n    font-size: 18px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.title{\\r\\n    text-align:center;\\r\\n}\\r\\n.title:hover{\\r\\n    background-color: black;\\r\\n    color:red;\\r\\n    text-align:center;\\r\\n}\\r\\ntr:hover{\\r\\n    background-color: black;\\r\\n    color:red;\\r\\n}\\r\\n/* Navbar container */\\r\\n.navbar {\\r\\n    overflow: hidden;\\r\\n    background-color: black;\\r\\n    font-family: Arial;\\r\\n}\\r\\n/* Links inside the navbar */\\r\\n.navbar a {\\r\\n    float: left;\\r\\n    font-size: 16px;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n    padding: 14px 16px;\\r\\n    text-decoration: none;\\r\\n}\\r\\n/* The dropdown container */\\r\\n.dropdown {\\r\\n    float: left;\\r\\n    overflow: hidden;\\r\\n}\\r\\n/* Dropdown button */\\r\\n.dropdown .dropbtn {\\r\\n    font-size: 16px;\\r\\n    border: none;\\r\\n    outline: none;\\r\\n    color: white;\\r\\n    padding: 14px 16px;\\r\\n    background-color: inherit;\\r\\n}\\r\\n/* Add a red background color to navbar links on hover */\\r\\n.navbar a:hover,\\r\\n.navbar .addSongBtn:hover,\\r\\n.dropdown-item:hover,\\r\\n.dropdown:hover .dropbtn {\\r\\n    background-color: red;\\r\\n}\\r\\n.navbar .addSongBtn {\\r\\n    height: 4rem;\\r\\n}\\r\\n/* Dropdown content (hidden by default) */\\r\\n.dropdown-content {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    background-color: #f9f9f9;\\r\\n    min-width: 160px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\r\\n    z-index: 1;\\r\\n}\\r\\n/* Links inside the dropdown */\\r\\n.dropdown-content a {\\r\\n    float: none;\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n    text-align: left;\\r\\n}\\r\\n/* Add a grey background color to dropdown links on hover */\\r\\n.dropdown-content a:hover {\\r\\n    background-color: #ddd;\\r\\n}\\r\\n/* Show the dropdown menu on hover */\\r\\n.dropdown:hover .dropdown-content {\\r\\n    display: block;\\r\\n    cursor: pointer;\\r\\n}\\r\\n/* .searchBar {\\r\\n    float: right;\\r\\n} */\"","module.exports = \"<ng4-loading-spinner></ng4-loading-spinner>\\r\\n\\r\\n<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class='container'>\\r\\n    <div class=\\\"title\\\">\\r\\n        <h1>\\r\\n            Music Forever Reigns\\r\\n        </h1>\\r\\n    </div>\\r\\n    <div class=\\\"navbar\\\">\\r\\n        <div class=\\\"dropdown\\\">\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"select\\\" [ngStyle]=\\\"{'color':'white'}\\\" class=\\\"btn dropbtn dropdown-toggle\\\">Select Folder\\r\\n            \\r\\n        </button>\\r\\n            <mat-menu #select=\\\"matMenu\\\" class=\\\"dropdown-content\\\">\\r\\n                    <a mat-menu-item class=\\\"dropdown-item\\\" (click)='filterShow(\\\"ALL\\\")'>Show All</a>\\r\\n                    <a mat-menu-item class=\\\"dropdown-item\\\" (click)='filterShow(\\\"12.09.2017\\\")'>Dec. 9, 2017</a>\\r\\n                    <a mat-menu-item class=\\\"dropdown-item\\\" (click)='filterShow(\\\"12.23.2017\\\")'>Dec. 23, 2017</a>\\r\\n            </mat-menu>\\r\\n            </div>\\r\\n        <div class=\\\"dropdown\\\">\\r\\n            <button mat-button [ngStyle]=\\\"{'color':'white'}\\\" class=\\\"addSongBtn btn btn-lg\\\" (click)='addSong()'>Add Song \\r\\n                <!-- <i class=\\\"fa fa-caret-down\\\"></i> -->\\r\\n              </button>\\r\\n            <!-- <div class=\\\"dropdown-content\\\">\\r\\n                <mat-menu #add=\\\"matMenu\\\" class=\\\"dropdown-content\\\">\\r\\n                        <a  mat-menu-item class=\\\"dropdown-item\\\" (click)='addSong()'>Add a Song</a>\\r\\n                </mat-menu>\\r\\n            </div> -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class='col-md-9'>\\r\\n            <h2>Song List</h2>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3 searchBar\\\">\\r\\n            <i class=\\\"material-icons\\\">search</i>\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Search\\\" (keyup)=\\\"searchFilter($event)\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf='errorMessage' [ngStyle]=\\\"{'color':'red'}\\\">{{errorMessage}}</div>\\r\\n        <table class='table' *ngIf='filteredSongs'>\\r\\n            <tbody>\\r\\n                <tr *ngFor='let performance of filteredSongs let i = index' (click)=\\\"routeToSongPage($event)\\\">\\r\\n                    <td class=\\\"songName {{performance.id}}\\\">{{i+1}}</td>\\r\\n                    <td class=\\\"songName {{performance.title}}\\\">{{performance.title}}</td>\\r\\n                    <td>{{performance.date}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    <!-- <div *ngFor='let item of items'>{{item}}</div> -->\\r\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\">Modal title</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"trigger(c)\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>One fine body&hellip;</p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"trigger(c)\\\">Close</button>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport {IPerformance} from '../models/music-interface';\r\nimport { MusicService } from './music.service';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport { MatFormFieldControl  } from '@angular/material/form-field';\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\nimport { NgbModal, NgbDropdown} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\n\r\n@Component({\r\n  selector: 'app-music',\r\n  templateUrl: './music.component.html',\r\n  styleUrls: ['./music.component.css']\r\n})\r\nexport class MusicComponent implements OnInit {\r\n    performances: IPerformance[];\r\n    errorMessage: string;\r\n    keys: Array<string>;\r\n    songName: object;\r\n    songs: any;\r\n    private id: any;\r\n    filteredSongs: Array<IPerformance>;\r\n    items: Observable<any[]>;\r\n\r\n    constructor(private _route: Router,\r\n                private _musicService: MusicService,\r\n                private spinnerService: Ng4LoadingSpinnerService,\r\n                private modalService: NgbModal) {\r\n                  // db.firestore.settings({timestampsInSnapshots:true});\r\n                  // this.items = db.collection('items').valueChanges();\r\n                  // console.log(this.items);\r\n                }\r\n  ngOnInit(): void {\r\n    this._musicService.getPerformances()\r\n    .subscribe(\r\n      performances => {\r\n        this.filteredSongs = performances;\r\n        this.filteredSongs.forEach((performance) => {\r\n        this.keys = Object.keys(performance);\r\n        });\r\n      },\r\n      error => this.errorMessage = <any>error);\r\n  }\r\n  // resovling ng-template error [Angular] Member function is not callable\r\n  trigger(callback: any, ...args: any[]) {\r\n    return callback(...args);\r\n  }\r\n\r\n  open(content: any) {\r\n    this.modalService.open(content);\r\n  }\r\n    myTimer() {\r\n      if (this.filteredSongs['length'] === 0) {\r\n        this.spinnerService.show();\r\n        setTimeout(() => {\r\n          this.spinnerService.hide();\r\n          this.errorMessage = 'Sorry, no results found';\r\n        }, 3000);\r\n      }\r\n    }\r\n    searchFilter(event: any) {\r\n      this.errorMessage = '';\r\n      this._musicService.getPerformances().subscribe(songs => {\r\n        this.songs = songs.filter(song => song.title.toLowerCase().includes(event.target.value.toLowerCase()));\r\n        this.filteredSongs = this.songs;\r\n        this.myTimer();\r\n      });\r\n    }\r\n    filterShow(id: string): void {\r\n      this._musicService.getPerformances().subscribe(songs => {\r\n        if (id === 'ALL') {\r\n          return this.filteredSongs = songs;\r\n        } else {\r\n          this.songs = songs.filter(song => song.date === id);\r\n        this.filteredSongs = this.songs;\r\n        }\r\n      });\r\n    }\r\n    routeToSongPage(event: any): void {\r\n      this.songName = this.filteredSongs.filter(song => song.title === event.target.innerHTML);\r\n      this._route.navigate(['music/', this.songName[0].id]);\r\n\r\n    }\r\n    addSong() {\r\n      this._route.navigate(['newSong']);\r\n    }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Http, Response} from '@angular/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/filter';\r\nimport {IPerformance} from '../models/music-interface';\r\n\r\n@Injectable()\r\nexport class MusicService {\r\n    private _url = '/api/songs';\r\n    constructor(private _http: HttpClient) {}\r\n    getPerformances(): Observable<IPerformance[]> {\r\n        return this._http.get<IPerformance[]>(this._url)\r\n        .do( data => {})\r\n        .catch(this.handleError);\r\n    }\r\n    getPerformance(id: string) {\r\n    }\r\n    private handleError(err: HttpErrorResponse) {\r\n        console.log(err.message);\r\n        return Observable.throw(err.error.message);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport { FirebaseApp } from 'angularfire2';\r\nimport { IPerformance } from '../models/music-interface';\r\nimport { RequestOptions } from '@angular/http';\r\n\r\n@Injectable()\r\n\r\nexport class FileService {\r\n    storageRef: any;\r\n    constructor(private http: HttpClient, private firebaseApp: FirebaseApp) {\r\n       // this.storageRef = firebaseApp.storage().ref();\r\n    }\r\n    test = true;\r\n\r\n    // postFile(songName: String, fileToUpload: File): Observable<any> {\r\n\r\n    //     const headers = new HttpHeaders({\r\n    //             'contentType': 'multipart/form-data'\r\n    //         });\r\n    //     const body = {\r\n    //         name: songName,\r\n    //         song: fileToUpload\r\n    //     };\r\n    //     console.log(body);\r\n    //     this.http.post('/api/songs', {name: songName, song: fileToUpload}).catch(err => Observable.of({\r\n    //         'Error': err\r\n    //     }));\r\n\r\n    // }\r\n    downloadFile(fileToDownload: any): Observable<string> {\r\n        console.log(fileToDownload);\r\n        let urlFile;\r\n\r\n        this.storageRef.child(`Songs/${fileToDownload}`).getDownloadURL().then((url: string) => {\r\n\r\n            // // This can be downloaded directly:\r\n            // const xhr = new XMLHttpRequest();\r\n            // xhr.responseType = 'blob';\r\n            // xhr.onload = (event) => {\r\n            //   const blob = xhr.response;\r\n            // };\r\n            // xhr.open('GET', url);\r\n            // xhr.send();\r\n\r\n            // // Or inserted into an <img> element:\r\n            // const img = document.getElementById('myimg');\r\n            // img.src = url;\r\n            urlFile = url;\r\n            console.log(urlFile);\r\n\r\n          }).catch((error: string) => {\r\n            // Handle any errors\r\n            console.log(error);\r\n          });\r\n          return Observable.of(urlFile);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'initCaps'\r\n})\r\nexport class InitCapsPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    return null;\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}